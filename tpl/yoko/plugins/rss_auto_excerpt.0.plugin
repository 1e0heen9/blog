a:11:{s:4:"name";s:16:"rss_auto_excerpt";s:6:"status";s:1:"1";s:6:"author";s:9:"Rob Sable";s:10:"author_uri";s:27:"http://www.wilshireone.com/";s:7:"version";s:3:"0.5";s:11:"description";s:26:"Automatic article excerpts";s:4:"help";s:7064:"

	<h1>Automatic article excerpts</h1>

	<p>The <code>rss_auto_excerpt</code> plugin automatically displays article excerpts even if an excerpt has not been saved with an article.  If for some articles you have defined an excerpt, your own excerpt will be displayed rather than the auto-generated excerpt.  You can also override this feature so that an auto-generated excerpt is always displayed even if an excerpt has been defined.</p>

	<p>There are 4 different options for auto-generating the excerpt from the article body:</p>

	<ul>
		<li><strong>By Length</strong> &#8211; specify the number of characters to display from the article body</li>
		<li><strong>By Words</strong> &#8211; specify the number of words to display from the article body</li>
		<li><strong>By Sentences</strong> &#8211; specify the number of sentences to display from the article body</li>
	</ul>
	<ul>
		<li><strong>By Paragraphs</strong> &#8211; specify the number of paragraphs to display from the article body</li>
	</ul>

	<p>If auto-generating by length, the plugin will ensure that the excerpt does not cutoff in the middle of a word.  If based on the parameters passed into the plugin, the excerpt would not be shorter than the entire article body, the body will be shown instead.</p>

	<h1>Reverse excerpts</h1>

	<p>You can also use the plugin to generate a &#8220;reverse&#8221; excerpt by using the <em>skip</em> variants of the length attributes.  For example:<br />
<pre><code>&#60;txp:if_individual_article&#62;
  &#60;txp:rss_auto_excerpt skipparagraphs=&#34;1&#34; paragraphs=&#34;9999&#34; /&#62;
&#60;txp:else /&#62;
  &#60;txp:rss_auto_excerpt paragraphs=&#34;1&#34; /&#62;
&#60;/txp:if_individual_article&#62;
</code></pre></p>

	<p>This code would display the first paragraph of your article on an article listing page, but on an individual article page, you would see all paragraphs except the first.</p>

	<p>The skip tags could also be used to apply different styling to you first paragraph (i.e., larger font size) or character (i.e., drop caps).</p>

	<p><strong>The plugin will also automatically close any open <span class="caps">HTML</span> tags.</strong>  This will allow for proper handling of lists, bolded or italicized text and other situations.  You can also choose to strip out all <span class="caps">HTML</span> tags from the excerpt.</p>

	<h1>Plugin Attributes</h1>

	<table style="color:#333;font:normal 1em verdana;width: 100%;padding: 0 0 20px;margin: 0 auto 20px;border-bottom:1px solid #666;" id="list">
		<tr>
			<th style="vertical-align:middle;white-space: nowrap;">attribute name</th>
			<th style="vertical-align:middle;white-space: nowrap;">description</th>
			<th style="vertical-align:middle;white-space: nowrap;">default value</th>
			<th style="vertical-align:middle;white-space: nowrap;">example usage</th>
		</tr>
		<tr>
			<td>length</td>
			<td>The number of characters to display from the article body.</td>
			<td> &nbsp;</td>
			<td>length=&#8220;350&#8221;</td>
		</tr>
		<tr>
			<td>words</td>
			<td>The number of words to display from the article body.</td>
			<td> &nbsp;</td>
			<td>words=&#8220;50&#8221;</td>
		</tr>
		<tr>
			<td>sentences</td>
			<td>The number of sentences to display from the article body.</td>
			<td> &nbsp;</td>
			<td>sentences=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>paragraphs</td>
			<td>The number of paragraphs to display from the article body.</td>
			<td> &nbsp;</td>
			<td>paragraphs=&#8220;2&#8221;</td>
		</tr>
		<tr>
			<td>linktext</td>
			<td>The link text for the permlink to the full article.</td>
			<td>Keep Reading&#8230;</td>
			<td>linktext=&#8220;Read More&#8221;</td>
		</tr>
		<tr>
			<td>ending</td>
			<td>The text that will be displayed at the end of the excerpt when generating the excerpt by length or words.  This is used to show that text is being truncated.</td>
			<td>...</td>
			<td>ending=&#8221;........&#8221;</td>
		</tr>
		<tr>
			<td>linkwraptag</td>
			<td>The <span class="caps">HTML</span> tag that wraps the permlink to the full article.</td>
			<td>p</td>
			<td>linkwraptag=&#8220;span&#8221;</td>
		</tr>
		<tr>
			<td>linkclass</td>
			<td>The class attribute on the linkwraptag.</td>
			<td> &nbsp;</td>
			<td>linkclass=&#8220;morelink&#8221;</td>
		</tr>
		<tr>
			<td>linklabel</td>
			<td>A label that appears before the permlink to the full article.  It will appear outside the link tag.</td>
			<td> &nbsp;</td>
			<td>linklabel=&#8221;- &#8220;</td>
		</tr>
		<tr>
			<td>wrapreadmore</td>
			<td>Determines whether the permlink to the article will be wrapped in the last closing tag of the excerpt or placed outside.</td>
			<td>0</td>
			<td>wrapreadmore=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>excerptwraptag</td>
			<td>The <span class="caps">HTML</span> tag that wraps the excerpt of the full article.</td>
			<td>p</td>
			<td>excerptwraptag=&#8220;span&#8221;</td>
		</tr>
		<tr>
			<td>showlinkwithbody</td>
			<td>Determines whether the permlink to the article will be shown when the article body is displayed because the generated excerpt is not shorter than the article body.</td>
			<td>0</td>
			<td>showlinkwithbody=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>showlinkwithexcerpt</td>
			<td>Determines whether the permlink to the article will be shown when the automatic excerpt is displayed.</td>
			<td>1</td>
			<td>showlinkwithexcerpt=&#8220;0&#8221;</td>
		</tr>
		<tr>
			<td>overrideexcerpt</td>
			<td>Displays an automatic excerpt even if the article has an excerpt defined.</td>
			<td>0</td>
			<td>overrideexcerpt=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>striptags</td>
			<td>Strips <span class="caps">HTML</span> tags from the automatic excerpt that is displayed.</td>
			<td>0</td>
			<td>striptags=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>stripbreakstabs</td>
			<td>Strips line breaks and tabs from the automatic excerpt that is displayed.</td>
			<td>0</td>
			<td>stripbreakstabs=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>skiplength</td>
			<td>The number of characters to skip at the beginning of the display from the article body.</td>
			<td>0</td>
			<td>skiplength=&#8220;50&#8221;</td>
		</tr>
		<tr>
			<td>skipwords</td>
			<td>The number of words to skip at the beginning of the display from the article body.</td>
			<td>0</td>
			<td>skipwords=&#8220;2&#8221;</td>
		</tr>
		<tr>
			<td>skipsentences</td>
			<td>The number of sentences to skip at the beginning of the display from the article body.</td>
			<td>0</td>
			<td>skipsentences=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>skipparagraphs</td>
			<td>The number of paragraphs to skip at the beginning of the display from the article body.</td>
			<td>0</td>
			<td>skipparagraphs=&#8220;1&#8221;</td>
		</tr>
		<tr>
			<td>excerpt</td>
			<td>The field name to use for the article excerpt.</td>
			<td>excerpt</td>
			<td>excerpt=&#8220;custom1&#8221;</td>
		</tr>
		<tr>
			<td>body</td>
			<td>The field name to use for the article body.</td>
			<td>body</td>
			<td>body=&#8220;custom2&#8221;</td>
		</tr>
	</table>";s:4:"code";s:4742:"
	function rss_auto_excerpt($atts) {
		global $thisarticle;

		extract(lAtts(array(
			'linkwraptag' => 'p',
			'linkclass' => '',
			'linklabel' => '',
			'linktext' => 'Keep Reading...',
			'excerptwraptag' => '',
			'length' => 0,
			'words' => 0,
			'sentences' => 0,
			'paragraphs' => 0,
			'skiplength' => 0,
			'skipwords' => 0,
			'skipsentences' => 0,
			'skipparagraphs' => 0,
			'ending' => '...',
			'showlinkwithbody' => 0,
			'showlinkwithexcerpt' => 1,
			'overrideexcerpt' => 0,
			'striptags' => 0,
			'stripbreakstabs' => 0,
			'wrapreadmore' => 0,
			'excerpt' => 'excerpt',
			'body' => 'body',
		),$atts));

		$excerpt = trim($thisarticle[$excerpt]);
		$body = trim($thisarticle[$body]);

		// if the article has an excerpt, show it
		if ($excerpt != '' && !$overrideexcerpt) {
			$autoex = ($excerptwraptag) ? tag(parse($excerpt),$excerptwraptag).n : parse($excerpt).n;
			$autoex.= ($showlinkwithexcerpt) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : "";
			return $autoex;
		}

		$body = ($striptags) ? strip_tags($body) : $body;

		$body = ($stripbreakstabs) ? ereg_replace("\n|\r|\r\n|\n\r|\t", " ", preg_replace('/\s\s+/', ' ', trim($body))) : $body;
		$charcount = strlen($body);
		$wordcount = count(explode(" ", $body));
		$sencount = count(explode(".", $body));
		$pghcount = count(explode("</p>", $body));

		if (!$length && !$words && !$sentences && !$paragraphs) $length = 150;

		$doex = 0;
		$doex = ($length) ? ($length < $charcount) ? 1 : 0 : $doex;
		$doex = ($words) ? ($words < $wordcount) ? 1 : 0 : $doex;
		$doex = ($sentences) ? ($sentences < $sencount) ? 1 : 0 : $doex;
		$doex = ($paragraphs) ? ($paragraphs < $pghcount) ? 1 : 0 : $doex;

		if ($doex) {
			if ($length) {
				$exa = explode(" ", substr($body, $skiplength, $length));
				if (count($exa) > 1) array_pop($exa);
				$ex = implode(" ",$exa);
			} else if ($words) {
				$allwords = explode(" ", $body);
				$awa = array_slice($allwords, $skipwords, $words);
				$ex = implode(" ",$awa);
			} else if ($sentences) {
				$allsens = explode(".", $body);
				$asa = array_slice($allsens, $skipsentences, $sentences);
				$ex = implode(".",$asa).".";
				$ending = "";
			} else if ($paragraphs) {
				$allpghs = explode("</p>", $body);
				$awp = array_slice($allpghs, $skipparagraphs, $paragraphs);
				$ex = implode("</p>",$awp);
				$ending = "";
			}
			$ex.= $ending.rssAutoCloseTags($ex);

			// find the last closing tag
			preg_match_all("/<\/(([A-Z]|[a-z]).*)(( )|(>))/isU",$ex,$closetags);
			$lasttag = end($closetags[0]);

			// add the read more text either inside the last closing tag or outside
			if ($wrapreadmore && $lasttag) {
				$exrm = ($showlinkwithexcerpt) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
				$ex = substr($ex, 0, -(strlen($lasttag))) . $exrm . $lasttag;
			} else {
				$ex.= ($showlinkwithexcerpt) ? n . doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
			}

		} else {
			$ex = parse($body);
			$ex.= ($showlinkwithbody) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
		}

		return $ex;
	}

// ----------------------------------------------------

	function rssAutoCloseTags($string) {
		// automatically close HTML-Tags
		// (usefull e.g. if you want to extract part of a blog entry or news as preview/teaser)
		// coded by Constantin Gross <connum at googlemail dot com> / 3rd of June, 2006
		// feel free to leave comments or to improve this function!
		// Updates by Rob Sable <www.wilshireone.com> / 20th of August, 2006

		$donotclose=array('br','img','input'); //Tags that are not to be closed

		//prepare vars and arrays
		$tagstoclose='';
		$tags=array();

		//put all opened tags into an array
		preg_match_all("/<(([A-Z]|[a-z]).*)(( )|(>))/isU",$string,$result);
		$openedtags=$result[1];
		$openedtags=array_reverse($openedtags); //this is just done so that the order of the closed tags in the end will be better

		//put all closed tags into an array
		preg_match_all("/<\/(([A-Z]|[a-z]).*)(( )|(>))/isU",$string,$result2);
		$closedtags=$result2[1];

		//look up which tags still have to be closed and put them in an array
		for ($i=0;$i<count($openedtags);$i++) {
			 if (in_array($openedtags[$i],$closedtags)) { unset($closedtags[array_search($openedtags[$i],$closedtags)]); }
					 else array_push($tags, $openedtags[$i]);
		}
		//$tags=array_reverse($tags); //now this reversion is done again for a better order of close-tags

		//prepare the close-tags for output
		for($x=0;$x<count($tags);$x++) {
		$add=strtolower(trim($tags[$x]));
		if(!in_array($add,$donotclose)) $tagstoclose.='</'.$add.'>';
		}

		//and finally
		return $tagstoclose;
	}
";s:12:"code_restore";s:4742:"
	function rss_auto_excerpt($atts) {
		global $thisarticle;

		extract(lAtts(array(
			'linkwraptag' => 'p',
			'linkclass' => '',
			'linklabel' => '',
			'linktext' => 'Keep Reading...',
			'excerptwraptag' => '',
			'length' => 0,
			'words' => 0,
			'sentences' => 0,
			'paragraphs' => 0,
			'skiplength' => 0,
			'skipwords' => 0,
			'skipsentences' => 0,
			'skipparagraphs' => 0,
			'ending' => '...',
			'showlinkwithbody' => 0,
			'showlinkwithexcerpt' => 1,
			'overrideexcerpt' => 0,
			'striptags' => 0,
			'stripbreakstabs' => 0,
			'wrapreadmore' => 0,
			'excerpt' => 'excerpt',
			'body' => 'body',
		),$atts));

		$excerpt = trim($thisarticle[$excerpt]);
		$body = trim($thisarticle[$body]);

		// if the article has an excerpt, show it
		if ($excerpt != '' && !$overrideexcerpt) {
			$autoex = ($excerptwraptag) ? tag(parse($excerpt),$excerptwraptag).n : parse($excerpt).n;
			$autoex.= ($showlinkwithexcerpt) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : "";
			return $autoex;
		}

		$body = ($striptags) ? strip_tags($body) : $body;

		$body = ($stripbreakstabs) ? ereg_replace("\n|\r|\r\n|\n\r|\t", " ", preg_replace('/\s\s+/', ' ', trim($body))) : $body;
		$charcount = strlen($body);
		$wordcount = count(explode(" ", $body));
		$sencount = count(explode(".", $body));
		$pghcount = count(explode("</p>", $body));

		if (!$length && !$words && !$sentences && !$paragraphs) $length = 150;

		$doex = 0;
		$doex = ($length) ? ($length < $charcount) ? 1 : 0 : $doex;
		$doex = ($words) ? ($words < $wordcount) ? 1 : 0 : $doex;
		$doex = ($sentences) ? ($sentences < $sencount) ? 1 : 0 : $doex;
		$doex = ($paragraphs) ? ($paragraphs < $pghcount) ? 1 : 0 : $doex;

		if ($doex) {
			if ($length) {
				$exa = explode(" ", substr($body, $skiplength, $length));
				if (count($exa) > 1) array_pop($exa);
				$ex = implode(" ",$exa);
			} else if ($words) {
				$allwords = explode(" ", $body);
				$awa = array_slice($allwords, $skipwords, $words);
				$ex = implode(" ",$awa);
			} else if ($sentences) {
				$allsens = explode(".", $body);
				$asa = array_slice($allsens, $skipsentences, $sentences);
				$ex = implode(".",$asa).".";
				$ending = "";
			} else if ($paragraphs) {
				$allpghs = explode("</p>", $body);
				$awp = array_slice($allpghs, $skipparagraphs, $paragraphs);
				$ex = implode("</p>",$awp);
				$ending = "";
			}
			$ex.= $ending.rssAutoCloseTags($ex);

			// find the last closing tag
			preg_match_all("/<\/(([A-Z]|[a-z]).*)(( )|(>))/isU",$ex,$closetags);
			$lasttag = end($closetags[0]);

			// add the read more text either inside the last closing tag or outside
			if ($wrapreadmore && $lasttag) {
				$exrm = ($showlinkwithexcerpt) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
				$ex = substr($ex, 0, -(strlen($lasttag))) . $exrm . $lasttag;
			} else {
				$ex.= ($showlinkwithexcerpt) ? n . doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
			}

		} else {
			$ex = parse($body);
			$ex.= ($showlinkwithbody) ? doTag($linklabel . permlink(array(), $linktext),$linkwraptag,$linkclass) : '';
		}

		return $ex;
	}

// ----------------------------------------------------

	function rssAutoCloseTags($string) {
		// automatically close HTML-Tags
		// (usefull e.g. if you want to extract part of a blog entry or news as preview/teaser)
		// coded by Constantin Gross <connum at googlemail dot com> / 3rd of June, 2006
		// feel free to leave comments or to improve this function!
		// Updates by Rob Sable <www.wilshireone.com> / 20th of August, 2006

		$donotclose=array('br','img','input'); //Tags that are not to be closed

		//prepare vars and arrays
		$tagstoclose='';
		$tags=array();

		//put all opened tags into an array
		preg_match_all("/<(([A-Z]|[a-z]).*)(( )|(>))/isU",$string,$result);
		$openedtags=$result[1];
		$openedtags=array_reverse($openedtags); //this is just done so that the order of the closed tags in the end will be better

		//put all closed tags into an array
		preg_match_all("/<\/(([A-Z]|[a-z]).*)(( )|(>))/isU",$string,$result2);
		$closedtags=$result2[1];

		//look up which tags still have to be closed and put them in an array
		for ($i=0;$i<count($openedtags);$i++) {
			 if (in_array($openedtags[$i],$closedtags)) { unset($closedtags[array_search($openedtags[$i],$closedtags)]); }
					 else array_push($tags, $openedtags[$i]);
		}
		//$tags=array_reverse($tags); //now this reversion is done again for a better order of close-tags

		//prepare the close-tags for output
		for($x=0;$x<count($tags);$x++) {
		$add=strtolower(trim($tags[$x]));
		if(!in_array($add,$donotclose)) $tagstoclose.='</'.$add.'>';
		}

		//and finally
		return $tagstoclose;
	}
";s:8:"code_md5";s:32:"73ef40a4bc40275c2f3b1a49e160b0f4";s:4:"type";s:1:"0";}