a:11:{s:4:"name";s:13:"aam_typogrify";s:6:"status";s:1:"1";s:6:"author";s:14:"Adam Messinger";s:10:"author_uri";s:24:"http://www.zenscope.com/";s:7:"version";s:3:"0.1";s:11:"description";s:77:"Brings the typographical goodies of Django's Typogrify filters to Textpattern";s:4:"help";s:7870:"	<h1>Typogrify for Textpattern, v0.1</h1>

	<h2>About the Plugin</h2>

	<p>The aam_typogrify plugin brings the typographical goodies of Django&#8217;s Typogrify filters to Textpattern. More specifically, it provides new template tags that perform the following actions:</p>

	<ul>
		<li>Prevent typographical widows (words that appear all by themselves on the last line of a paragraph or title).</li>
		<li>Wrap ampersands (&#8221;&amp;&#8221;) in a span with a class of &#8220;amp&#8221; for easier selective styling.</li>
		<li>Wrap initial quotes&#8212;at the beginning of a paragraph or heading&#8212;in a span with a class of &#8220;dquo&#8221; for double quotes or &#8220;quo&#8221; for single quotes. This allows some additional <span class="caps">CSS</span> tricks, like hanging quotation marks.</li>
	</ul>

	<p>Basically, this is candy for Web typography geeks. If you care about how text is presented on the web, Typogrify can help you make your text look better.</p>

	<p><a href="http://code.google.com/p/typogrify/" title="Typogrify on Google Code" rel="nofollow">Typogrify</a> started out as a <a href="http://static.mintchaos.com/projects/typogrify/" title="A demonstration of Typogrify&#39;s application to text" rel="nofollow">set of Django text filters</a> developed by <a href="http://www.mintchaos.com/" rel="nofollow">Christian Metts</a>. This Textpattern plugin is based on <a href="http://blog.hamstu.com/2007/05/31/web-typography-just-got-better/" rel="nofollow">the <span class="caps">PHP</span> port by Hamish Macpherson</a>.</p>

	<p>If you have any problems with aam_typogrify, please let me know by posting a message in <a href="http://forum.textpattern.com/viewtopic.php?pid=150741" title="Report problems or bugs here" rel="nofollow">the plugin&#8217;s support thread</a> on the Textpattern forum.</p>

	<h2>Usage</h2>

	<p><em>The plugin compiler doesn&#8217;t like it when I use angle brackets, so the Textpattern template tags and <span class="caps">HTML</span> tags in these examples are surrounded with square brackets instead.</em> Ex: <code>[txp:title /]</code></p>

	<p>Typogrify for Textpattern provides four container tags, all of which can be used around other Textpattern tags or around blocks of static text.</p>

	<h3>aam_widont</h3>

	<p>Wrap this tag around text to prevent typographical widows:</p>

<pre><code>[txp:aam_widont]
  [h2][txp:custom_field name="my_field" /][/h2]
[/txp:aam_widont]
</code></pre>

	<p>With the inclusion of this feature, aam_typogrify supersedes my previous plugin aam_widont.</p>

	<h3>aam_amplify</h3>

	<p>Wrap this tag around text to markup ampersands with a classed span:</p>

<pre><code>[txp:aam_amplify]
  [p]The Law Offices of Dewy, Cheatham &amp; Howe[/p]
[/txp:aam_amplify]
</code></pre>

	<h3>aam_quotify</h3>

	<p>Wrap this tag around text to markup initial quotation marks with a classed span:</p>

<pre><code>[txp:aam_quotify][txp:title /][/txp:aam_quotify]
</code></pre>

	<h3>aam_typogrify</h3>

	<p>This is the big daddy mega-filter. It runs text through all of the manipulations listed above:</p>

<pre><code>[txp:aam_typogrify]
  [txp:title /]
  [txp:body /]
[/txp:aam_typogrify]
</code></pre>

	<h3>Nesting Tags</h3>

	<p>You can nest tags to selectively use Typogrify&#8217;s features. For example, if you only want to prevent widows and wrap ampersands in spans:</p>

<pre><code>[txp:aam_amplify][txp:aam_widont]
  [h2][txp:title /][/h2]
[/txp:aam_widont][/txp:aam_amplify]
</code></pre>

	<p>The order in which you nest tags doesn&#8217;t matter. Just make sure that you close them in the same order that you open them.</p>

	<h2>What This Plugin <em>Doesn&#8217;t</em> Do</h2>

	<p>There are a couple of filters from the original Typogrify that weren&#8217;t incorporated into this plugin, mostly because they duplicate existing features of Textpattern&#8217;s Textile formatting system:</p>

	<ul>
		<li><em>SmartyPants</em> &#8212; This was omitted for its duplication of Textile features and possible compatibility problems.</li>
		<li><em>span-wrapping of capitalized strings</em> &#8212; The original Typogrify also wrapped strings of two or more capital letters in a span with class &#8220;caps.&#8221; It even did this if there were periods or numbers in between the letters. Textile does something similar, but isn&#8217;t as aggressive. If there&#8217;s a call for the more comprehensive cap-wrapping of Typogrify, I&#8217;ll include it in a future release.</li>
	</ul>

	<h2>Compatibility with Other Plugins</h2>

	<h3>Compatibility with aam_widont</h3>

	<p>Typogrify for Textpattern <strong>should not</strong> be used together with my previous plugin, <a href="http://www.zenscope.com/blog/38/widont-textpattern-plugin" rel="nofollow">aam_widont</a>. They both use the same tag for widow prevention, but they use different <span class="caps">PHP</span> functions to accomplish this goal.</p>

	<p>The previous plugin used the Inman / Mullenweg implementation from <a href="http://www.shauninman.com/archive/2007/01/03/widont_2_1_wordpress_plugin" rel="nofollow">Widon&#8217;t 2.1 for WordPress</a>. It worked well for one-liners like headings, but when used with <code>[txp:excerpt /]</code> or <code>[txp:article /]</code> the white space (tabs or spaces) between blocks of <acronym title="Extensible Hypertext Markup Language"><span class="caps">XHTML</span></acronym> seemed to trip it up.</p>

	<p>The aam_typogrify plugin uses the Widon&#8217;t function from Hamish Macpherson&#8217;s <span class="caps">PHP</span> port of Typogrify. This handles white space better, but I don&#8217;t know if it has the internationalization support of Windon&#8217;t 2.1. If you write in a non-English language and find that the widow prevention feature of this plugin causes trouble, please let me know.</p>

	<h3>Compatibility with upm_textile</h3>

	<p>You shouldn&#8217;t have any trouble using aam_typogrify together with Mary&#8217;s <a href="http://utterplush.com/txp-plugins/upm-textile" rel="nofollow">upm_textile</a>, as long as you nest Mary&#8217;s plugin <em>inside</em> mine:</p>

<pre><code>[txp:aam_typogrify][txp:upm_textile]
  [txp:excerpt /]
[/txp:upm_textile][/txp:aam_typogrify]
</code></pre>

	<p>Textpattern evaluates plugins from the inside out, and you&#8217;ll want to have Textile applied to your text before it gets Typogrified.</p>

	<h2>Performance Notes</h2>

	<p>This plugin uses a feature of <span class="caps">PHP</span> called <em>regular expressions</em> to do its thing. Regular expressions are very powerful, but can also cause a drain on performance if you go overboard.</p>

	<p>If you notice that your site seems slower when using this plugin:</p>

	<ol>
		<li>Try using only the features that you need. If you only want to apply special styles to ampersands, then only use the <code>aam_amplify</code> tag.</li>
		<li>Use the plugin only on selected areas of your Textpattern templates, where typographical niceties are most noticeable. Titles are an especially good candidate.</li>
		<li>If all else fails, try a chaching plugin like <a href="http://forum.textpattern.com/viewtopic.php?id=3195" rel="nofollow">zem_cache</a> or <a href="http://forum.textpattern.com/viewtopic.php?id=8352" rel="nofollow">asy_jpcache</a>.</li>
	</ol>

	<h2>License</h2>

	<p>This plugin is provided by the author under the terms of the <a href="http://en.wikipedia.org/wiki/BSD_license" rel="nofollow"><span class="caps">BSD</span> license</a>. See the &#8220;<span class="caps">LICENSE</span>.txt&#8221; file, included in the download, for details.</p>

	<h2>About the Author</h2>

	<p>Adam Messinger is a website designer, front-end Web developer, and graphic designer. At <a href="http://www.zenscope.com/" rel="nofollow">zenscope.com</a>, he maintains a portfolio and writes a weblog about his work (powered by Textpattern, of course).</p>";s:4:"code";s:3678:"
/* First, some utility functions. These do the actual work: */

/** aam_typogrify_ampersands
  * finds ampersands and wraps them in a span w/ class="amp"
  */
function aam_typogrify_ampersands( $text ) {
  $amp_finder = "/(\s|&nbsp;)(&|&amp;|&\#38;)(\s|&nbsp;)/";
  $text = preg_replace($amp_finder, '\\1<span class="amp">&amp;</span>\\3', $text);
  return $text;
}

/** aam_typogrify_widows
  * Suppresses typographical widows.
  * Replaced the Inman / Mullenweg version with this one from PHP-Typogrify.
  * I/M Widon't didn't handle successive blocks of markup with whitespace
  * between them. (Possibly due to its original ties to WordPress template
  * tags?)
  */
function aam_typogrify_widows( $text ) {
  $widont_finder = "/(\s+)                                 # the space to replace
                    ([^<>\s]+                               # must be flollowed by non-tag non-space characters
                    \s*                                     # optional white space!
                    (<\/(a|em|span|strong|i|b)[^>]*>\s*)*    # optional closing inline tags with optional white space after each
                    (<\/(p|h[1-6]|li)|$))                    # end with a closing p, h1-6, li or the end of the string
                    /x";
  $text = preg_replace($widont_finder, '&nbsp;\\2', $text);
  return $text;
}

/** aam_typogrify_quote_wrapper
  * utility function that does replacement in a preg_replace_callback()
  * for aam_typogrify_initial_quotes
  */
function aam_typogrify_quote_wrapper( $matchobj ) {
  if ( !empty($matchobj[7]) ) {
    $classname = "dquo";
    $quote = $matchobj[7];
  } else {
    $classname = "quo";
    $quote = $matchobj[8];
  }
  return sprintf('%s<span class="%s">%s</span>', $matchobj[1], $classname, $quote);
}

/** aam_typogrify_initial_quotes
  * Wraps initial quotes in class="dquo" for double quotes or
  * class="quo" for single quotes. Works in these block tags: (h1-h6, p, li).
  * Also accounts for opening inline elements: (a, em, strong, span, b, i).
  */
function aam_typogrify_initial_quotes( $text ) {
  $quote_finder =
  "/((<(p|h[1-6]|li)[^>]*>|^)                   # start with an opening p, h1-6, li or the start of the string
  \s*                                           # optional white space!
  (<(a|em|span|strong|i|b)[^>]*>\s*)*)          # optional opening inline tags, with more optional white space for each.
  ((\"|&ldquo;|&\#8220;)|('|&lsquo;|&\#8216;))  # Find me a quote! (only need to find the left quotes and the primes)
                                                # double quotes are in group 7, singles in group 8
  /x";
  $text = preg_replace_callback($quote_finder, "aam_typogrify_quote_wrapper", $text);
  return $text;
}


/* And now, the template tags: */

/** aam_amplify
  * Parses $thing, runs result through aam_typogrify_ampersands.
  */
function aam_amplify( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_ampersands( $text );
}

/** aam_widont
  * Parses $thing, runs result through aam_typogrify_widows.
  */
function aam_widont( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_widows( $text );
}

/** aam_quotify
  * Parses $thing, runs result through aam_typogrify_initial_quotes.
  */
function aam_quotify( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_initial_quotes( $text );
}

/** aam_typogrify
  * The mega-filter. Runs everything else.
  */
function aam_typogrify( $atts="", $thing="" ) {
  $text = parse( $thing );
  $text = aam_typogrify_ampersands( $text );
  $text = aam_typogrify_widows( $text );
  $text = aam_typogrify_initial_quotes( $text );
  return $text;
}
";s:12:"code_restore";s:3678:"
/* First, some utility functions. These do the actual work: */

/** aam_typogrify_ampersands
  * finds ampersands and wraps them in a span w/ class="amp"
  */
function aam_typogrify_ampersands( $text ) {
  $amp_finder = "/(\s|&nbsp;)(&|&amp;|&\#38;)(\s|&nbsp;)/";
  $text = preg_replace($amp_finder, '\\1<span class="amp">&amp;</span>\\3', $text);
  return $text;
}

/** aam_typogrify_widows
  * Suppresses typographical widows.
  * Replaced the Inman / Mullenweg version with this one from PHP-Typogrify.
  * I/M Widon't didn't handle successive blocks of markup with whitespace
  * between them. (Possibly due to its original ties to WordPress template
  * tags?)
  */
function aam_typogrify_widows( $text ) {
  $widont_finder = "/(\s+)                                 # the space to replace
                    ([^<>\s]+                               # must be flollowed by non-tag non-space characters
                    \s*                                     # optional white space!
                    (<\/(a|em|span|strong|i|b)[^>]*>\s*)*    # optional closing inline tags with optional white space after each
                    (<\/(p|h[1-6]|li)|$))                    # end with a closing p, h1-6, li or the end of the string
                    /x";
  $text = preg_replace($widont_finder, '&nbsp;\\2', $text);
  return $text;
}

/** aam_typogrify_quote_wrapper
  * utility function that does replacement in a preg_replace_callback()
  * for aam_typogrify_initial_quotes
  */
function aam_typogrify_quote_wrapper( $matchobj ) {
  if ( !empty($matchobj[7]) ) {
    $classname = "dquo";
    $quote = $matchobj[7];
  } else {
    $classname = "quo";
    $quote = $matchobj[8];
  }
  return sprintf('%s<span class="%s">%s</span>', $matchobj[1], $classname, $quote);
}

/** aam_typogrify_initial_quotes
  * Wraps initial quotes in class="dquo" for double quotes or
  * class="quo" for single quotes. Works in these block tags: (h1-h6, p, li).
  * Also accounts for opening inline elements: (a, em, strong, span, b, i).
  */
function aam_typogrify_initial_quotes( $text ) {
  $quote_finder =
  "/((<(p|h[1-6]|li)[^>]*>|^)                   # start with an opening p, h1-6, li or the start of the string
  \s*                                           # optional white space!
  (<(a|em|span|strong|i|b)[^>]*>\s*)*)          # optional opening inline tags, with more optional white space for each.
  ((\"|&ldquo;|&\#8220;)|('|&lsquo;|&\#8216;))  # Find me a quote! (only need to find the left quotes and the primes)
                                                # double quotes are in group 7, singles in group 8
  /x";
  $text = preg_replace_callback($quote_finder, "aam_typogrify_quote_wrapper", $text);
  return $text;
}


/* And now, the template tags: */

/** aam_amplify
  * Parses $thing, runs result through aam_typogrify_ampersands.
  */
function aam_amplify( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_ampersands( $text );
}

/** aam_widont
  * Parses $thing, runs result through aam_typogrify_widows.
  */
function aam_widont( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_widows( $text );
}

/** aam_quotify
  * Parses $thing, runs result through aam_typogrify_initial_quotes.
  */
function aam_quotify( $atts="", $thing="" ) {
  $text = parse( $thing );
  return aam_typogrify_initial_quotes( $text );
}

/** aam_typogrify
  * The mega-filter. Runs everything else.
  */
function aam_typogrify( $atts="", $thing="" ) {
  $text = parse( $thing );
  $text = aam_typogrify_ampersands( $text );
  $text = aam_typogrify_widows( $text );
  $text = aam_typogrify_initial_quotes( $text );
  return $text;
}
";s:8:"code_md5";s:32:"e15ef700e6843e0da6e4a673b6a0c0a1";s:4:"type";s:1:"0";}